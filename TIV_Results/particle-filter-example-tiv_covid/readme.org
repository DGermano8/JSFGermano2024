#+title: TEIVR example using =pypfilt=

* Data

The data is sourced from the following paper:

  - https://doi.org/10.1038/s41564-022-01105-z

Specifically, we use patients 432192, 443108, 444332, 444391, 445602, and 451152.

The processed data is stored in the =data= directory.

* Model


** Stoichiometric

Here are the reactant and products as needed by the hybrid model and
the flows as needed by the CTMC model.

|          | *Reactants* |     |     |     |      | *Products* |     |     |     |     | *Flow*      |     |     |     |     | 
|----------+-------------+-----+-----+-----+------+------------+-----+-----+-----+-----+-------------+-----+-----+-----+-----|
| *Rate*   |         $T$ | $E$ | $I$ | $V$ | $R$  |        $T$ | $E$ | $I$ | $V$ | $R$ |         $T$ | $E$ | $I$ | $V$ | $R$ |
|----------+-------------+-----+-----+-----+------+------------+-----+-----+-----+-----+-------------+-----+-----+-----+-----|
| $\beta$  |          1  |   . |   . |   1 |   .   |          . |   1 |   . |   1 |   . |         -1|    1 |   . |   . |   . |
| $\kappa$ |          .  |  1  |   . |   . |   .   |          . |   . |   1 |   . |   . |          .|   -1 |   1 |   . |   . |
| $\delta$ |          .  |   . |   1 |   . |   .   |          . |   . |   . |  .  |   . |          .|    . |  -1 |   . |   . |
| $\pi$    |          .  |   . |   1 |   . |   .   |          . |   . |   1 |   1 |   . |          .|    . |   . |   1 |   . |
| $c$      |          .  |   . |   . |   1 |   .   |          . |   . |   . |   . |   . |          .|    . |   . |  -1 |   . |
| $\Phi$   |          1  |   . |   1 |   . |   .   |          . |   . |   1 |   . |   1 |         -1|    . |   . |   . |   1 |
| $\rho$   |          .  |   . |   . |   . |   1   |          1 |   . |   . |   . |   . |          1|    . |   . |   . |  -1 |

** Differential equations

Here are the differential equations used by the ODE model:

$\frac{dT}{dt} &= - \beta V T - \Phi I T + \rho R$,

$\frac{dE}{dt} &= \beta V T - k E$,

$\frac{dI}{dt} &= k E - \delta I$,

$\frac{dV}{dt} &= \pi I - c V$,

$\frac{dR}{dt} &= \Phi I T - \rho R$.


* Simulation and Inference

To run the inference on the data, you first describe the data in a file, e.g., [[file:./data/432192.ssv]]. 
Then, you set the inference settings in the file [[file:./config/cli-refractory-tiv-jsf.toml]].

To run the inference, use the following command:
#+begin_src sh
  python COVID_TEIVR_Inf_loop.py
#+end_src

This will run the inference for each patient in the data directory, and pickle the results.

To run the Analysis, use the following command:
#+begin_src sh
  python COVID_TEIVR_Analysis.py
#+end_src

Look in the output directory for the results.

* Environment

The [[file:./requirements.txt][requirements.txt]] file contains a description of the packages (and
versions) needed to run this.

** Setting up the environment

Use the following to set up a virtual environment.

#+begin_src sh
  python3 -m venv venv
  source venv/bin/activate
  pip install -U pip
  pip install -r requirements.txt
#+end_src





TODO - Explain how to install a local copy of jsf by cloning the package from GitHub.

TODO - Explain that you need to run the COVID.*py script to run the actual compute.

TODO - Explain that the figure generation is done by the .m scripts in the =processing/= directory.





and to check I am not making any obvious errors, this is how we can
use =mypy=.

#+begin_src sh
  mypy run-inf-cli.py run-inference-from-simulation.py src/inf.py
#+end_src


YOU MUST INSTALL A LOCAL COPY OF JSF FOR THIS TO WORK

--------------------------------------------------------------------------------
* TO RUN THE INFERENCE
--------------------------------------------------------------------------------
The model is written in the file src/tiv.py. Here, the model is defined as a
jsf method. 
- threshold parameter, \Omega, is set here: threshold = 100
- Stoichiometric matricies are defined here as: _nu_reactants and _nu_products
- the propensity functions are contained in _rates(self, x, theta, time)
- in update, _my_opts defines 'EnforceDo', the time step, 'dt', and the switch
  between the CTMC and ODE models for each state variable, as 'SwitchingThreshold'


The inference is run using the file COVID_TIV_Inf.py.
Here, each patient is analysed independently. The data is read in from the files
stored in the data folder.

The configuration file is read in from the file cli-refractory-tiv-jsf.toml.
This file contains the following information:
- the number of particles to use in the particle filter
- the number of iterations to run the particle filter for
- the state parameters initial values
- the prior distributions for the parameters
- the observation model

--------------------------------------------------------------------------------
* TO GENERATE THE FIGURES
--------------------------------------------------------------------------------
Figure generation is done in the folder processing, using MATLAB to plot.
First, the data from the "outputs" folder is should be imported over into the 
"Data" folder. 
